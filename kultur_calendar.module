<?php
/**
 * @file
 * Module hooks are defined here.
 */
module_load_include('inc', 'kultur_calendar', 'kultur_calendar.events');

/**
 * Implements hook_menu().
 */
function kultur_calendar_menu() {
  $items = array();

  $items['kalender'] = array(
    'title' => 'KulturÃ˜en Calendar',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kultur_calendar'),
    'access callback' => array('kultur_access_calendar'),
    'type' => MENU_CALLBACK,
  );
  $items['kalender/events'] = array(
    'title' => 'Retreives events for libraries',
    'page callback' => 'kultur_calendar_events_get',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'delivery callback' => 'drupal_json_output',
  );
  $items['kalender/day'] = array(
    'title' => 'Get data for one day',
    'page callback' => 'kultur_calendar_events_day_load',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'delivery callback' => 'drupal_json_output',
  );
  return $items;
}

/**
 * Access callback based on the domain.
 *
 * @return bool
 *   Access permission.
 */
function kultur_access_calendar() {
  global $_domain;
  if (strpos($_domain['subdomain'], 'kultur') !== FALSE) {
    return TRUE;
  }

  return FALSE;
}

/**
 * Render Full page calendar.
 *
 * @return array
 *   Form elements.
 */
function kultur_calendar($form, &$form_state) {
  $path = drupal_get_path('module', 'kultur_calendar');

  $did = kultur_calendar_get_domain_id();

  $query = db_select('node', 'n');
  $query->join('domain_access', 'da', 'n.nid = da.nid');
  $query->fields('n', array('nid', 'title'));
  $query->condition('n.type', 'ding_library');
  $query->condition('n.status', '1');
  $query->condition('da.gid', $did);
  $query->condition('da.realm', 'domain_id');
  $libraries = $query->execute()->fetchAllKeyed();

  $form['libraries'] = array(
    '#type' => 'checkboxes',
    '#options' => $libraries,
    '#default_value' => array_keys($libraries),
    '#id' => drupal_html_id('kultur-libraries'),
    '#suffix' => '
      <div id="kultur_calendar"></div>
        <div id="kultur_calendar-day" class="hidden"></div>
      ',
    '#attached' => array(
      'js' => array(
        array(
          'data' => 'http://code.jquery.com/jquery-1.11.3.min.js',
          'type' => 'external',
        ),
        array(
          'data' => 'https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js',
          'type' => 'external',
        ),
        array(
          'data' => 'https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js',
          'type' => 'external',
        ),
        array(
          'data' => 'https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/locale-all.js',
          'type' => 'external',
        ),
        array(
          'data' => $path . '/js/kultur_calendar.js'
        ),
        array(
          'data' => array(
            'events' => array(),
          ),
          'type' => 'setting'
        ),
      ),
      'css' => array(
        array(
          'data' => 'https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.css',
          'type' => 'external',
        ),
        array('data' => $path . '/css/kultur_calendar.css'),
      ),
    ),
  );

  return $form;
}

/**
 * Get events sum based for each library based on the period.
 *
 * @return array
 *   Set of event numbers grouped by library.
 */
function kultur_calendar_events_get() {
  $events = array();
  if (!empty($_POST['start']) && !empty($_POST['end'])) {
    $events = kultur_calendar_get_events($_POST['start'], $_POST['end']);
  }

  return $events;
}

/**
 * Load single event for each library.
 *
 * This function is called on the popup display.
 *
 * @return array
 *   Set of events in a given day.
 */
function kultur_calendar_events_day_load() {
  $events = array();
  if (!empty($_POST['date'])) {
    $date = date('l d.m.Y', strtotime($_POST['date']));
    $did = kultur_calendar_get_domain_id();
    $timezone = date_default_timezone_get();

    $events[$date] = kultur_calendar_get_day_libraries_events($_POST['date'], $did, $timezone);
    foreach ($events[$date] as &$event) {
      $day = kultur_calendar_get_day_events($_POST['date'], $event->lid, $timezone);

      _kultur_calendar_format_event_time($day);

      $event->info = $day;
      $event->date = $_POST['date'];
    }
  }

  return $events;
}

/**
 * Proper format of the event date.
 */
function _kultur_calendar_format_event_time(&$day) {
  $timezone = date_default_timezone_get();
  $raw_start = new DateTime($day->start, new DateTimeZone($timezone));
  $raw_start = $raw_start->getTimestamp();

  $raw_end = new DateTime($day->end, new DateTimeZone($timezone));
  $raw_end = $raw_end->getTimestamp();

  $start = format_date($raw_start, 'kultur_time');
  $end = format_date($raw_end, 'kultur_time');

  if ($start == "0:00") {
    $day->start = t('All day');
    $day->end = '';
  }
  elseif ($raw_start != $raw_end) {
    $day->start = $start;
    $day->end = $end;
  }
  else {
    $day->start = $start;
    $day->end = '';
  }
}
